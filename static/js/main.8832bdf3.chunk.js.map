{"version":3,"sources":["components/Filter/FilterStyle.module.css","components/AppStyles.module.css","components/ContactForm/ContactFormStyles.module.css","components/Filter/Filter.js","components/ContactForm/ContactForm.js","components/ContactList/ContactList.js","components/App.js","services/localStorage.js","index.js","components/ContactList/ContactListStyles.module.css"],"names":["module","exports","Filter","onChangeValue","filter","className","styles","filterContainer","filterInput","type","value","onChange","contactForm","onSubmit","useState","name","setName","number","setNumber","handleChange","key","nameInputId","shortid","generate","numberInputId","form","e","preventDefault","label","htmlFor","pattern","title","required","target","id","formInput","formButton","ContactList","contacts","onRemoveContact","map","list","onClick","listBtn","STORAGE_KEY","App","setContacts","setFilter","useEffect","savedContacts","JSON","parse","localStorage","getItem","error","storage","setItem","stringify","filterContacts","normalizeFilter","toLowerCase","contact","includes","ContactForm","newName","some","alert","prevContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8832bdf3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterContainer\":\"FilterStyle_filterContainer__30Dmy\",\"filterInput\":\"FilterStyle_filterInput__lbIJM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"AppStyles_contactForm__32mX0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactFormStyles_label__3hAdf\",\"form\":\"ContactFormStyles_form__374zd\",\"formInput\":\"ContactFormStyles_formInput__EJJjQ\",\"formButton\":\"ContactFormStyles_formButton__1j65B\"};","import PropTypes from \"prop-types\";\nimport styles from \"./FilterStyle.module.css\";\n\nexport default function Filter({ onChangeValue, filter }) {\n  return (\n    <div className={styles.filterContainer}>\n      Find contacts by name\n      <input\n        className={styles.filterInput}\n        type=\"text\"\n        value={filter}\n        onChange={onChangeValue}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChangeValue: PropTypes.func.isRequired,\n};\n","import { useState } from \"react\";\nimport shortid from \"shortid\";\nimport styles from \"./ContactFormStyles.module.css\";\nimport PropTypes from \"prop-types\";\n\nconst contactForm = ({ onSubmit }) => {\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [name, setName] = useState(\"\");\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (key, value) => {\n    if (key === \"name\") {\n      setName(value);\n    }\n    if (key === \"number\") {\n      setNumber(value);\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    onSubmit({ name, number });\n    setName(\"\");\n    setNumber(\"\");\n  };\n  const nameInputId = shortid.generate();\n  const numberInputId = shortid.generate();\n  return (\n    <form className={styles.form} onSubmit={handleSubmit}>\n      <h1>PhoneBook</h1>\n      <label className={styles.label} htmlFor={nameInputId}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          value={name}\n          onChange={(e) => handleChange(e.target.name, e.target.value)}\n          id={nameInputId}\n          className={styles.formInput}\n        />\n      </label>\n      <label className={styles.label} htmlFor={numberInputId}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          value={number}\n          onChange={(e) => handleChange(e.target.name, e.target.value)}\n          id={numberInputId}\n          className={styles.formInput}\n        />\n      </label>\n      <button className={styles.formButton} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n\ncontactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default contactForm;\n","import PropTypes from \"prop-types\";\nimport styles from \"./ContactListStyles.module.css\";\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n  return (\n    <ul className={styles.contacts}>\n      {contacts.map(({ name, number, id }) => (\n        <li key={id} className={styles.list}>\n          {name} : {number}\n          {\n            <button\n              type=\"button\"\n              name=\"delete\"\n              onClick={() => onRemoveContact(id)}\n              className={styles.listBtn}\n            >\n              delete\n            </button>\n          }\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  onRemoveContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\nexport default ContactList;\n","import { useState, useEffect } from \"react\";\nimport shortid from \"shortid\";\nimport Filter from \"./Filter/Filter\";\nimport ContactForm from \"./ContactForm/ContactForm\";\nimport ContactList from \"./ContactList/ContactList\";\nimport * as storage from \"../services/localStorage\";\nimport styles from \"../components/AppStyles.module.css\";\n\nconst STORAGE_KEY = \"contacts\";\n\nconst App = () => {\n  const [contacts, setContacts] = useState([\n    { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n    { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n    { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n    { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  ]);\n\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const savedContacts = storage.get(STORAGE_KEY);\n    if (savedContacts) {\n      setContacts([...savedContacts]);\n    }\n  }, []);\n\n  useEffect(() => storage.save(STORAGE_KEY, contacts), [contacts]);\n\n  const onSubmitName = ({ name, number }) => {\n    const contactId = shortid.generate();\n    const newName = {\n      id: contactId,\n      name,\n      number,\n    };\n    const compareContact = contacts.some(\n      (contact) => contact.name.toLowerCase() === newName.name.toLowerCase()\n    );\n    if (compareContact) {\n      return alert(`${name} is alredy in contacts`);\n    }\n    setContacts([newName, ...contacts]);\n  };\n\n  const filterContacts = () => {\n    const normalizeFilter = filter.toLowerCase();\n    return contacts.filter((contact) =>\n      contact.name.toLowerCase().includes(normalizeFilter)\n    );\n  };\n\n  const changeFilter = (e) => setFilter(e.target.value);\n\n  const removeContact = (id) =>\n    setContacts((prevContacts) =>\n      prevContacts.filter((contact) => contact.id !== id)\n    );\n\n  return (\n    <>\n      <ContactForm onSubmit={onSubmitName} />\n      <h2 className={styles.contactForm}>Contacts</h2>\n      <Filter value={filter} onChangeValue={changeFilter} />\n      {filterContacts() ? (\n        <ContactList\n          contacts={filterContacts()}\n          onRemoveContact={removeContact}\n        />\n      ) : (\n        <p className={styles.contactForm}>\n          Nothing found. Add contact or clear filter.\n        </p>\n      )}\n    </>\n  );\n};\n\nexport default App;\n","const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst get = (key) => {\r\n  try {\r\n    return JSON.parse(localStorage.getItem(key));\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nconst remove = (key) => {\r\n  try {\r\n    return localStorage.removeItem(key);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n};\r\n\r\nexport { get, save, remove };\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactListStyles_list__3vOEb\",\"contacts\":\"ContactListStyles_contacts__3h-Fn\",\"listBtn\":\"ContactListStyles_listBtn__1RMWL\"};"],"sourceRoot":""}